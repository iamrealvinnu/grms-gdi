{"ast":null,"code":"var _jsxFileName = \"D:\\\\GDI Bot\\\\MyChatBotApp\\\\Frontend\\\\crm-chatbot-frontend\\\\src\\\\components\\\\ChatbotUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { IoMdSend } from \"react-icons/io\";\nimport { FaTimes } from \"react-icons/fa\";\nimport Message from \"./Message\";\nimport \"./styles/chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = ({\n  closeChat\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      sender: \"user\",\n      text: input\n    }];\n    setMessages(newMessages);\n    setInput(\"\");\n    try {\n      const response = await axios.post(\"https://localhost:51643/chat\", {\n        message: input\n      });\n      setMessages([...newMessages, {\n        sender: \"bot\",\n        text: response.data.reply\n      }]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages([...newMessages, {\n        sender: \"bot\",\n        text: \"Error processing request.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"CRM Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaTimes, {\n        className: \"close-btn\",\n        onClick: closeChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        sender: msg.sender,\n        text: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IoMdSend, {\n        className: \"send-btn\",\n        onClick: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatbotUI, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","axios","IoMdSend","FaTimes","Message","jsxDEV","_jsxDEV","ChatbotUI","closeChat","_s","messages","setMessages","input","setInput","sendMessage","trim","newMessages","sender","text","response","post","message","data","reply","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","type","placeholder","value","onChange","e","target","onKeyPress","key","_c","$RefreshReg$"],"sources":["D:/GDI Bot/MyChatBotApp/Frontend/crm-chatbot-frontend/src/components/ChatbotUI.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport Message from \"./Message\";\r\nimport \"./styles/chatbot.css\";\r\n\r\nconst ChatbotUI = ({ closeChat }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const sendMessage = async () => {\r\n        if (!input.trim()) return;\r\n\r\n        const newMessages = [...messages, { sender: \"user\", text: input }];\r\n        setMessages(newMessages);\r\n        setInput(\"\");\r\n\r\n        try {\r\n            const response = await axios.post(\"https://localhost:51643/chat\", { message: input });\r\n            setMessages([...newMessages, { sender: \"bot\", text: response.data.reply }]);\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            setMessages([...newMessages, { sender: \"bot\", text: \"Error processing request.\" }]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-header\">\r\n                <span>CRM Assistant</span>\r\n                <FaTimes className=\"close-btn\" onClick={closeChat} />\r\n            </div>\r\n\r\n            <div className=\"chat-body\">\r\n                {messages.map((msg, index) => (\r\n                    <Message key={index} sender={msg.sender} text={msg.text} />\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat-footer\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\r\n                />\r\n                <IoMdSend className=\"send-btn\" onClick={sendMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatbotUI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}